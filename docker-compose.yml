version: '3'
services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
      
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
      
  kafka:
    image: wurstmeister/kafka
    ports:
    - "9092:9092"
    expose:
    - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "reviews:3:1,test2:3:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper 
      
  moviedatabase:
    image: postgres:12.2-alpine
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: vanilla13
    depends_on: 
      - kafka  
      
  reviewdatabase:
    image: postgres:12.2-alpine
    ports:
      - "30:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: vanilla13
   
  movieservice:
    build: ./movie-service
    ports:
      - "4000:4000"
    depends_on: 
      - moviedatabase 
      
  reviewsgervice:
    build: ./review-service
    ports:
      - "9000:9000"      
    depends_on: 
      - kafka   
    environment:
      BT_SERVER: "kafka:9093"  
    restart: on-failure  
  apigw:
    build: ./gateway/APIGW
    ports:
      - "1231:80" 